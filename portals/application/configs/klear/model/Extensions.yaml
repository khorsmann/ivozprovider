#include ../conf.d/friendValueHelp.yaml

production:
  class: \IvozProvider\Model\Extensions
  entity: Ivoz\Domain\Model\Extension\Extension
  fields:
    company:
      title: ngettext('Company', 'Companies', 1)
      type: select
      required: true
      source:
        data: mapper
        config:
#          mapperName: \IvozProvider\Mapper\Sql\Companies
          entity: \Ivoz\Domain\Model\Company\Company
          fieldName:
            fields:
              - name
            template: '%name%'
          order:
            Company.name: asc
    number:
      title: _('Number')
      type: text
      trim: both
      pattern: "^[0-9].*$"
      required: true
      default: true
      info:
        type: box
        position: left
        icon: help
        text: _("Minimal length: 2")
        label: _("Need help?")
    routeType:
      title: _('Route type')
      type: select
      source:
        data: inline
        filterclass: IvozProvider_Klear_Filter_RouteTypes
        values:
          '__null__':
            title: _("Unassigned")
            visualFilter:
              show: [ ]
              hide: [
                "numberValue", "IVRCommonId", "IVRCustomId", "userId",
                "huntGroupId", "conferenceRoomId", "friendValue", "queueId",
                "conditionalRouteId"
              ]
          'user':
            title: ngettext('User', 'Users', 1)
            visualFilter:
              show: [ "userId" ]
              hide: [
                "numberValue", "IVRCommonId", "IVRCustomId", "huntGroupId",
                "conferenceRoomId", "friendValue", "queueId", "conditionalRouteId"
              ]
          'IVRCommon':
            title: ngettext('IVR Common', 'IVRs Common', 1)
            visualFilter:
              show: [ "IVRCommonId" ]
              hide: [
                "numberValue", "userId", "IVRCustomId", "huntGroupId",
                "conferenceRoomId", "friendValue", "queueId", "conditionalRouteId"
              ]
          'IVRCustom':
            title: ngettext('IVR Custom', 'IVRs Custom', 1)
            visualFilter:
              show: [ "IVRCustomId" ]
              hide: [
                "numberValue", "IVRCommonId", "userId", "huntGroupId",
                "conferenceRoomId", "friendValue", "queueId", "conditionalRouteId"
              ]
          'huntGroup':
            title: ngettext('Hunt Group', 'Hunt Groups', 1)
            visualFilter:
              show: [ "huntGroupId" ]
              hide: [
                "numberValue", "IVRCommonId", "IVRCustomId", "userId",
                "conferenceRoomId", "friendValue", "queueId", "conditionalRouteId"
              ]
          'conferenceRoom':
            title: ngettext('Conference room', 'Conference rooms', 1)
            visualFilter:
              show: [ "conferenceRoomId" ]
              hide: [
                "numberValue", "IVRCommonId", "IVRCustomId", "userId",
                "huntGroupId", "friendValue", "queueId", "conditionalRouteId"
              ]
          'number':
            title: _('Number')
            visualFilter:
              show: [ "numberValue" ]
              hide: [
                "conferenceRoomId", "IVRCommonId", "IVRCustomId", "userId",
                "huntGroupId", "friendValue", "queueId", "conditionalRouteId"
              ]
          'friend':
            title: ngettext('Friend', 'Friends', 1)
            visualFilter:
              show: [ "friendValue" ]
              hide: [
                "conferenceRoomId", "IVRCommonId", "IVRCustomId", "userId",
                "huntGroupId", "numberValue", "queueId", "conditionalRouteId"
              ]
          'queue':
            title: ngettext('Queue', 'Queues', 1)
            visualFilter:
              show: [ "queueId" ]
              hide: [
                "friendValue", "conferenceRoomId", "IVRCommonId", "IVRCustomId",
                "userId", "huntGroupId", "numberValue", "conditionalRouteId"
              ]
          'conditional':
            title: _('Conditional Route')
            visualFilter:
              show: [ "conditionalRouteId" ]
              hide: [
                "friendValue", "conferenceRoomId", "IVRCommonId", "IVRCustomId",
                "userId", "huntGroupId", "numberValue", "queueId"
              ]
    numberValue:
      title: _('Number')
      type: text
      pattern: "^\\+?[0-9]+$"
      required: true
      maxLength: 25
      trim: both
    IVRCommon:
      title: ngettext('IVR Common', 'IVRs Common', 1)
      type: select
      required: true
      source:
        data: mapper
        config:
#          mapperName: \IvozProvider\Mapper\Sql\IVRCommon
          entity: \Ivoz\Domain\Model\IVRCommon\IVRCommon
          filterclass: IvozProvider_Klear_Filter_Company
          fieldName:
            fields:
              - name
            template: '%name%'
          order:
            IVRCommon.name: asc
        'null': _("Unassigned")
    IVRCustom:
      title: ngettext('IVR Custom', 'IVRs Custom', 1)
      type: select
      required: true
      source:
        data: mapper
        config:
#          mapperName: \IvozProvider\Mapper\Sql\IVRCustom
          entity: \Ivoz\Domain\Model\IVRCustom\IVRCustom
          filterclass: IvozProvider_Klear_Filter_Company
          fieldName:
            fields:
              - name
            template: '%name%'
          order:
            IVRCustom.name: asc
        'null': _("Unassigned")
    huntGroup:
      title: ngettext('Hunt Group', 'Hunt Groups', 1)
      type: select
      required: true
      source:
        data: mapper
        config:
#          mapperName: \IvozProvider\Mapper\Sql\HuntGroups
          entity: \Ivoz\Domain\Model\HuntGroup\HuntGroup
          filterclass: IvozProvider_Klear_Filter_Company
          fieldName:
            fields:
              - name
            template: '%name%'
          order:
            HuntGroup.name: asc
        'null': _("Unassigned")
    conferenceRoom:
      title: ngettext('Conference room', 'Conference rooms', 1)
      type: select
      required: true
      source:
        data: mapper
        config:
#          mapperName: \IvozProvider\Mapper\Sql\ConferenceRooms
          entity: \Ivoz\Domain\Model\ConferenceRoom\ConferenceRoom
          filterclass: IvozProvider_Klear_Filter_Company
          fieldName:
            fields:
              - name
            template: '%name%'
          order:
            ConferenceRoom.name: asc
        'null': _("Unassigned")
    user:
      title: _('User')
      type: select
      required: true
      source:
        data: mapper
        config:
#          mapperName: \IvozProvider\Mapper\Sql\Users
          entity: \Ivoz\Domain\Model\User\User
          filterclass: IvozProvider_Klear_Filter_Company
          fieldName:
            fields:
              - name
              - lastname
            template: '%name% %lastname%'
          order:
            User.name: asc
        'null': _("Unassigned")
    friendValue:
      title: _('Friend value')
      type: text
      maxLength: 25
      required: true
      <<: *friendValueHelp
    queue:
      title: ngettext('Queue', 'Queues', 1)
      type: select
      required: true
      source:
        data: mapper
        config:
#          mapperName: \IvozProvider\Mapper\Sql\Queues
          entity: \Ivoz\Domain\Model\Queue\Queue
          filterclass: IvozProvider_Klear_Filter_Company
          fieldName:
            fields:
              - name
            template: '%name%'
          order:
            Queue.name: asc
        'null': _("Unassigned")
    conditionalRouteId:
      title: _('Conditional Route')
      type: select
      required: true
      source:
        data: mapper
        config:
          mapperName: \IvozProvider\Mapper\Sql\ConditionalRoutes
          filterClass: IvozProvider_Klear_Filter_Company
          fieldName:
            fields:
              - name
            template: '%name%'
          order: name
        'null': _("Unassigned")
    target:
      title: _('Target')
      type: ghost
      source:
        class: IvozProvider_Klear_Ghost_DDITarget
        method: getData
staging:
  _extends: production
testing:
  _extends: production
development:
  _extends: production
localdev:
  _extends: production
